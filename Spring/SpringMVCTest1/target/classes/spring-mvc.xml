<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-4.1.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

	<!-- 自动扫描@Controller注入为bean -->
	<context:component-scan base-package="com.qin.controller" />
	<context:component-scan base-package="com.qin.domain" />
	<context:annotation-config />

	<!-- 以下为SpringMVC配置 -->
	<mvc:annotation-driven enable-matrix-variables="true"
		conversion-service="conversionService">
		<!-- 返回json数据，@response使用 -->
		<mvc:message-converters register-defaults="true">
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>

			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"
		p:order="0">
		<property name="contentNegotiationManager" ref="contentNegotiationManager"></property>
		<property name="defaultViews">
			<list>
				<bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"
					p:modelKeys="userList" />
				<bean class="org.springframework.web.servlet.view.xml.MarshallingView"
					p:modelKey="userList" p:marshaller-ref="xmlMarshaller" />
			</list>
		</property>
	</bean>
	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
		p:order="10" />
	<!-- <bean class="org.springframework.web.servlet.view.XmlViewResolver"
		p:order="20" p:location="views/springmvc-views.xml" />
	<bean class="org.springframework.web.servlet.view.ResourceBundleViewResolver"
		p:order="30" p:basename="i18n/views" /> -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="100">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix">
			<value>/views</value>
		</property>
		<property name="suffix" value=".jsp" />
	</bean>

	<!--优先级最高， 不支持扩展文件名，不支持Accept报文头指定MIME类型，通过请求参数指定MIME类型，参数名为content，请求类型的参数值和MIME类型的映射列表 -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"
		p:ignoreAcceptHeader="true" p:favorPathExtension="false"
		p:favorParameter="true" p:parameterName="content" p:defaultContentType="text/html">
		<property name="mediaTypes">
			<value>
				html=text/html
				xml=application/xml
				json=application/json
			</value>
		</property>
	</bean>




	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
		p:messageConverters-ref="messageConverters">
	</bean>
	<util:list id="messageConverters">
		<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />
		<bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
		<bean class="org.springframework.http.converter.StringHttpMessageConverter" />
		<bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter" />
		<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		<bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"
			p:marshaller-ref="xmlMarshaller" p:unmarshaller-ref="xmlMarshaller" />
	</util:list>
	<!-- 声明Marshaller,使用XStream技术 -->
	<bean id="xmlMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
		<property name="streamDriver">
			<!-- 使用STAX对XML消息进行处理，STAX占用内存少，响应速度快 -->
			<bean class="com.thoughtworks.xstream.io.xml.StaxDriver" />
		</property>
		<property name="annotatedClasses">
			<list>
				<!-- 使用XStream的注解定义XML转换规则，使用XStream注解得类在此声明 -->
				<value>com.qin.domain.User</value>
			</list>
		</property>
	</bean>


	<!-- 自定义类型转换 -->
	<bean id="conversionService"
		class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="com.qin.domain.StringToUserConverter" />
			</list>
		</property>
	</bean>


</beans>  