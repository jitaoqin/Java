	AOP是Aspect Oriented Programing的简称。
	连接点（Joinpoint)特定点是程序执行的某个特定位置，如类开始初始化前，类初始化后，方法调用前后等。
spring仅支持方法的连接点。连接点由两个信息确定，方法表示的程序执行点，用相对位置表示的方位。
	切点（Pointcut) 连接点相当于数据库中记录，而切点相当于查询条件，一个切点可以匹配多个连接点。
	增强（Advice)增强是植入目标类连接点上的一段程序代码。
	目标对象（target）增强逻辑的植入目标类。
	引介（Introduction） 特殊的增强，为类添加一些属性和方法，即使一个类没有实现某个接口，通过引介功能
可以动态的为该类添加接口的实现逻辑，让业务类成为接口的实现类。
	织入（Weaving) 将增强添加到目标类的具体连接点上的过程。AOP有三种织入方式：
		（1）编译期织入，这要求使用特殊的Java编译器
		（2）类加载器织入，这要求使用特殊的 类加载器
		（3）动态代理织入，在运行期为目标类添加增强生成子类的方式
		spring采用动态代理织入，而AspectJ采用编译期织入和类加载期织入。
	代理