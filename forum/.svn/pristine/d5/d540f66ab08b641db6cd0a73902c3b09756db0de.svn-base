package com.qin.domain;
// Generated 2017-10-22 14:53:45 by Hibernate Tools 5.1.4.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.springframework.beans.factory.annotation.Autowired;

/**
 * TUser generated by hbm2java
 */
@Entity
@Table(name = "t_user")
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class User extends BaseDomain {
	
	 
    public static final int USER_LOCK = 1;//锁定用户对应的状态值 
    public static final int USER_UNLOCK = 0;//用户解锁对应的状态值
    public static final int FORUM_ADMIN = 2;//管理员类型
    public static final int NORMAL_USER = 1;//普通用户类型

	private Integer userId;
	private String userName;
	private String password;
	private byte userType = NORMAL_USER;
	private byte locked;
	private Integer credit;
	private Date lastVisit;
	private String lastIp;
	
	@Autowired
	@ManyToMany(cascade = { CascadeType.PERSIST, CascadeType.MERGE }, fetch = FetchType.EAGER)
	@JoinTable(name = "t_board_manager", joinColumns = {@JoinColumn(name ="user_id" )}, inverseJoinColumns = {@JoinColumn(name = "board_id") })
	private Set<Board> manboards = new HashSet<>();

	public User() {
	}

	public User(String userName, String password, byte userType, byte locked) {
		this.userName = userName;
		this.password = password;
		this.userType = userType;
		this.locked = locked;
	}

	public User(String userName, String password, byte userType, byte locked, Integer credit, Date lastVisit,
			String lastIp) {
		this.userName = userName;
		this.password = password;
		this.userType = userType;
		this.locked = locked;
		this.credit = credit;
		this.lastVisit = lastVisit;
		this.lastIp = lastIp;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@Column(name = "user_name", nullable = false, length = 30)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "password", nullable = false, length = 30)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "user_type", nullable = false)
	public byte getUserType() {
		return this.userType;
	}

	public void setUserType(byte userType) {
		this.userType = userType;
	}

	@Column(name = "locked", nullable = false)
	public byte getLocked() {
		return this.locked;
	}

	public void setLocked(byte locked) {
		this.locked = locked;
	}

	@Column(name = "credit")
	public Integer getCredit() {
		return this.credit;
	}

	public void setCredit(Integer credit) {
		this.credit = credit;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_visit", length = 19)
	public Date getLastVisit() {
		return this.lastVisit;
	}

	public void setLastVisit(Date lastVisit) {
		this.lastVisit = lastVisit;
	}

	@Column(name = "last_ip", length = 20)
	public String getLastIp() {
		return this.lastIp;
	}

	public void setLastIp(String lastIp) {
		this.lastIp = lastIp;
	}

	public Set<Board> getManboards() {
		return manboards;
	}

	public void setManboards(Set<Board> manboards) {
		this.manboards = manboards;
	}
	
}
